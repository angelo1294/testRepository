<?xml version="1.0"?>
<TestCaseCatalog version="7.2.0.201811011532">
    <testCaseCatalog>
        <item name="session_profiles/QC.fftc">
            <tcDescriptor version="7.2.0.201811011532">
                <general>
                    <sessionClass includeTestCase="true" sessionType="project://tests/session_profiles/REST.ffsp"/>
                </general>
                <procedures>
                    <item name="GetReservations" isPublic="true">
                        <arguments>
                            <item name="username">
                                <defaultValue>spirent</defaultValue>
                            </item>
                            <item name="password">
                                <defaultValue>spirent</defaultValue>
                            </item>
                            <item name="approverId">
                                <description>string (optional) 
if specified, only reservations assigned to an approver are returned</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                            <item name="searchString">
                                <description>string (optional) 
if specified, only reservations whose names match the string are returned</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                            <item name="startAfter">
                                <description>number (optional) 
timestamp of the beginning of custom period (if specified, only reservations that intersect with given period are returned)</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                            <item name="endBefore">
                                <description>number (optional) 
timestamp of the ending of custom period (if specified, only reservations that intersect with given period are returned)</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                            <item name="pageable">
                                <description>Every collection marked as pageable supports the additional request parameters: offset and limit.
Example: offset=1&amp;limit=11</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                            <item name="filterable">
                                <description>Used to filter.
Example: name1::value1|name2::value2&amp;filter=name3::value3</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                        </arguments>
                    </item>
                    <item name="HasOptions" isPublic="true">
                        <arguments>
                            <item name="has_options">
                                <description>This is a helper variable, that will add either &quot;?&quot; or &quot;&amp;&quot; between the params</description>
                                <defaultValue>$has_options</defaultValue>
                                <isMandatory>true</isMandatory>
                            </item>
                            <item name="pageable">
                                <description>Every collection marked as pageable supports the additional request parameters: offset and limit.
Example: offset=1&amp;limit=11</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                            <item name="filterable">
                                <description>Used to filter.
Example: filter=name1::value1|name2::value2&amp;filter=name3::value3</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                            <item name="sortable">
                                <description>Used to sort by some rules. Keywords used are sortBy and sortOrder. These are case sensitive.
An example, where sorting is done by name descending: sortBy=name&amp;sortOrder=desc</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                            <item name="searchString">
                                <description>searchString string (optional) 
if specified, only templates whose names, descriptions or tags match the string are returned
Example: searchString=TestSetImage</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                            <item name="startAfter">
                                <description>number (optional) 
timestamp of the beginning of custom period (if specified, only reservations that intersect with given period are returned)</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                            <item name="endBefore">
                                <description>number (optional) 
timestamp of the ending of custom period (if specified, only reservations that intersect with given period are returned)</description>
                                <defaultValue>NULL</defaultValue>
                            </item>
                        </arguments>
                    </item>
                </procedures>
            </tcDescriptor>
        </item>
    </testCaseCatalog>
</TestCaseCatalog>
